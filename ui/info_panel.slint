import { FieldTilesData } from "./field_data.slint";

export global InfoPanelAdapter {
	in_out property <int> panel_mode;

	in-out property <FieldTilesData> tile_data;

	in-out property <int> dices_count;
	in-out property <int> dices_max_digits;
	in-out property <[int]> dices;

	in-out property <string> any_header;
	in-out property <string> any_text;
}

//NOTE: I couldn't find smth simular to case which operates elements.
// Only states to operate properties inside element and if else if during callback call

export component InfoPanel inherits Rectangle {
	in property <length> normal_text_size; in property <length> panel_minimal_side;

	if InfoPanelAdapter.panel_mode == 1:
		Rectangle {
			background: InfoPanelAdapter.tile_data.fill-color;

			VerticalLayout {
				Text {
					text: InfoPanelAdapter.tile_data.title;
					color: white;
					horizontal-alignment: center;
					vertical-alignment: center;
					font-size: normal_text_size * 2.5;
					font-weight: 600;
					wrap: word-wrap;
					overflow: elide;
				}

				Text {
					text: InfoPanelAdapter.tile_data.description;
					horizontal-alignment: center;
					vertical-alignment: center;
					font-size: normal_text_size;
					wrap: word-wrap;
					overflow: elide;
				}

				for rule in InfoPanelAdapter.tile_data.rules:
					Text {
						text: rule;
						horizontal-alignment: center;
						vertical-alignment: center;
						font-size: normal_text_size;
						wrap: word-wrap;
						overflow: elide;
					}
			}
		}

	if InfoPanelAdapter.panel_mode == 2:
		Rectangle {
			background: gray;
			VerticalLayout {
				alignment: center;
				HorizontalLayout {
					alignment: space-around;
					for dice_value in InfoPanelAdapter.dices: Rectangle {
						width: panel_minimal_side / (InfoPanelAdapter.dices_count + 1);
						height: panel_minimal_side / (InfoPanelAdapter.dices_count + 1);

						border-color: black;
						border-width: 3px;

						Text {
							text: dice_value;
							font-size: parent.width / InfoPanelAdapter.dices_max_digits;
							wrap: word-wrap;
							overflow: elide;
						}
					}
				}
			}
		}

	if InfoPanelAdapter.panel_mode == 3:
		Rectangle {
			background: gray;
			VerticalLayout {
				alignment: center;
				spacing: normal_text_size * 2;
				Text {
					color: black;
					horizontal-alignment: center;
					vertical-alignment: center;
					font-size: normal_text_size * 1.5;
					font-weight: 600;
					wrap: word-wrap;
					overflow: elide;
					text: InfoPanelAdapter.any_header;
				}

				Text {
					text: InfoPanelAdapter.any_text;
					horizontal-alignment: center;
					vertical-alignment: center;
					font-size: normal_text_size;
					wrap: word-wrap;
					overflow: elide;
				}
			}
		}

	//TODO: Remove test panel, change startup panel to tile where player now is.
	if InfoPanelAdapter.panel_mode == 4:
		Rectangle {
			background: gray;
			Text {
				font-size: normal_text_size;
				text: "Will be removed later";
			}
		}
}
