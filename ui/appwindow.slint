import { FieldTile, FieldData } from "./FieldTile.slint";

export component AppWindow inherits Window {
	preferred-width: 1920px;
	preferred-height: 1080px;

	in property <[FieldData]> field_top;
	in property <[FieldData]> field_right;
	in property <[FieldData]> field_left;
	in property <[FieldData]> field_bottom;

	in property <string> main_info_title;

	property <int> tiles-count: field_left.length;

	property <length> minimal_side: min(root.height, root.width);
	property <length> tiles-size-height: root.height / tiles-count;
	property <length> tiles-size-width: root.width / tiles-count;
	property <length> tiles-size: min(tiles-size-width, tiles-size-height);

	HorizontalLayout {
		alignment: center;
		VerticalLayout {
			for filed_data in field_left: FieldTile {
				min-width: tiles-size-width;
				min-height: tiles-size;
				FieldTile {
					field_data: filed-data;
				}
			}
		}

		VerticalLayout {
			min-width: root.width / 2;
			alignment: space-between;
			HorizontalLayout{
				for filed_data in field_top: FieldTile {
					FieldTile {
						min-width: tiles-size;
						min-height: tiles-size-height;
						field_data: filed-data;
					}
				}
			}
			HorizontalLayout{
				Text {
					text: main_info_title;
					vertical-alignment: center;
					horizontal-alignment: center;
					font-weight: 500;
					font-size: minimal_side / 15;
				}
			}
			HorizontalLayout{
				for filed_data in field_bottom: FieldTile {
					FieldTile {
						min-width: tiles-size;
						min-height: tiles-size-height;
						field_data: filed-data;
					}
				}
			}
		}

		VerticalLayout {
			for filed_data in field_right: FieldTile {
				FieldTile {
					min-width: tiles-size-width;
					min-height: tiles-size;
					field_data: filed-data;
				}
			}
		}
	}

	/*
	Rectangle {
		x: 100px;
		y: 100px;
		width: parent.width / 10;
		height: parent.width / 10;
		background: red;
		border-radius: self.width / 2;
	}
	*/
}
